PROGRAM    -> METH_DECL*

METH_DECL  -> TYPE ID '(' FORMALS? ')' BODY
FORMALS    -> TYPE ID (',' TYPE ID)*
TYPE       -> int

BODY       -> '{' VAR_DECL*  STMT* '}'
VAR_DECL   -> TYPE ID ('=' EXP)? (',' ID ('=' EXP)?)* ';'

STMT       -> ASSIGN ';'
          | return EXP ';'
          | if '(' EXP ')' STMT else STMT
          | while '(' EXP ')' STMT
          | break ';'
          | BLOCK
          | ';'

BLOCK      -> '{' STMT* '}'
ASSIGN     -> LOCATION '=' EXP
LOCATION   -> ID
METHOD     -> ID

EXP        -> LOCATION
          | LITERAL
          | METHOD '(' ACTUALS? ')'
          | '('EXP '+' EXP')'
          | '('EXP '-' EXP')'
          | '('EXP '*' EXP')'
          | '('EXP '/' EXP')'
          | '('EXP '&' EXP')'
          | '('EXP '|' EXP')'
          | '('EXP '<' EXP')'
          | '('EXP '>' EXP')'
          | '('EXP '=' EXP')'
          | '(''-' EXP')'
          | '(''!' EXP')'
          | '(' EXP ')'

ACTUALS    -> EXP (',' EXP)*

LITERAL    -> INT | true | false

INT        -> [0-9]+
ID         -> [a-zA-Z] ( [a-zA-Z] | [0-9] | '_' )*